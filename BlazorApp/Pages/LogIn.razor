@page "/login"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>User name:</label>
                <input type="text" @bind="userName"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="password"/>
            </div>
            @if (!string.IsNullOrEmpty(resultMsg))
            {
                <div class="field">
                    <label style="color: red">
                        @resultMsg
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="Login">Log in</button>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <label>HALO</label>
        </div>
    </Authorized>
</AuthorizeView>


@code {
    private string userName = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Login()
    {
        resultMsg = "";
        try
        {
            await authService.LoginAsync(new UserLoginDto()
            {
                Username = userName,
                Password = password
            });
            resultMsg = $"Logged in ";
            navMgr.NavigateTo("/");
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}